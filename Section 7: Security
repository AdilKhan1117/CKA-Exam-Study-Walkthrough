Security Primitives:
!
!
- Root based disabled
- Password based authentication disabled
- kube-apiserver first line of defence, controlling access to api-server itself

Authentication:
who can access the api-server? 
- Username and password stored in file
- username and tokens 
- cert
- LDAP
- Service accounts

Authorisation:
What can they do
- RBAC Authorisation
- ABAC Authorisation
- Node Authorisation 
- Webhook Mode

- All components talking to Kube-Api Server is secured via tls encryption 
- communicaton between application, pod within the cluster, can access all other pods within the cluster
  can restrict using network policies 
  
  Authentication:
  
  Access to K8s cluster:
  Admin - Users
  Developers - Users
  End users
  Bots - Service accounts since this is 3rd party
  
  - k8s does not manage users account nativlely 
  - cannot create users on clusters
  
  - Can create service accounts however for bots etc
  
  user access:
  
  - All user access is managed by the kubernetes api-server 
  - Api servers authenticate users before processing
  - kube-apiserver authenticates 
    - static password file = create user/passwords in csv file 
    - static token file    = 
    - certificates
    - identity services
  
  
  
  
  
  
